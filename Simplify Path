class Solution {
public:
    string simplifyPath(string path) {
        stack<string> st;
        vector<string> arr;
        int i=0;
        while(i<path.length()){
            string s="";
            if(path[i]=='/'){
                 i++;
            }
            else{
            while(path[i]!='/' and i<path.length()){
                s+=path[i++];   
            }    
            if(s!=""){
             arr.push_back(s);
            }
        }
        }
        i=0;
        for(i=0;i<arr.size();i++){
            if(arr[i]==".." and st.empty()){
                continue;
            }
            else if(arr[i]==".."){
                st.pop();
            }
            else{
                if(arr[i]==".") continue;
                st.push(arr[i]);
            }
        }
        vector<string> temp;
        while(!st.empty()){
            string s=st.top();
            st.pop();
            temp.push_back(s);
        }
        reverse(temp.begin(),temp.end());
        string ans="/";
        for(i=0;i<temp.size();i++){
            ans+=temp[i];
            if(i!=temp.size()-1){
                ans+='/';
            }
        }
        return ans;
        
    }
};
